class Solution 
{
    public int trap(int[] height) 
    {
        int max=0,i,c=0,index=0;
        Stack<Integer> s = new Stack<Integer>();
        for(i=0;i<height.length;i++)
        {
            if(height[i]>max)
            {
                max=height[i];
                index=i;
            }
        }
        s.push(0);
        for(i=1;i<=index;i++)
        {
            if(height[i]>height[s.peek()])
            {
                s.push(i);
            }
            else
            {
                c=c+(height[s.peek()]-height[i]);
            }
        }
        while(s.empty()!=true)
        {
            s.pop();
        }
        s.push(height.length-1);
        for(i=(height.length-2);i>=index;i--)
        {
            if(height[i]>height[s.peek()])
            {
                s.push(i);
            }
            else
            {
                c=c+(height[s.peek()]-height[i]);
            }
        }
        return c;
    }
}
